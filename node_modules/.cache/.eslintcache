[{"C:\\Users\\Pertel\\Desktop\\my-ttavli-app\\src\\index.js":"1","C:\\Users\\Pertel\\Desktop\\my-ttavli-app\\src\\App.js":"2"},{"size":278,"mtime":1750596850841,"results":"3","hashOfConfig":"4"},{"size":108898,"mtime":1750623865906,"results":"5","hashOfConfig":"4"},{"filePath":"6","messages":"7","suppressedMessages":"8","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"r68m2c",{"filePath":"9","messages":"10","suppressedMessages":"11","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\Pertel\\Desktop\\my-ttavli-app\\src\\index.js",[],[],"C:\\Users\\Pertel\\Desktop\\my-ttavli-app\\src\\App.js",["12","13","14","15","16","17","18","19","20","21"],[],{"ruleId":"22","severity":1,"message":"23","line":1,"column":78,"nodeType":"24","messageId":"25","endLine":1,"endColumn":84},{"ruleId":"26","severity":1,"message":"27","line":127,"column":6,"nodeType":"28","endLine":127,"endColumn":13,"suggestions":"29"},{"ruleId":"26","severity":1,"message":"30","line":767,"column":9,"nodeType":"31","endLine":767,"endColumn":108},{"ruleId":"26","severity":1,"message":"32","line":767,"column":9,"nodeType":"31","endLine":767,"endColumn":108},{"ruleId":"26","severity":1,"message":"33","line":768,"column":9,"nodeType":"31","endLine":768,"endColumn":108},{"ruleId":"26","severity":1,"message":"34","line":768,"column":9,"nodeType":"31","endLine":768,"endColumn":108},{"ruleId":"22","severity":1,"message":"35","line":1043,"column":17,"nodeType":"24","messageId":"25","endLine":1043,"endColumn":37},{"ruleId":"26","severity":1,"message":"36","line":1228,"column":6,"nodeType":"28","endLine":1228,"endColumn":123,"suggestions":"37"},{"ruleId":"26","severity":1,"message":"38","line":1488,"column":8,"nodeType":"28","endLine":1488,"endColumn":218,"suggestions":"39"},{"ruleId":"26","severity":1,"message":"40","line":1893,"column":8,"nodeType":"28","endLine":1893,"endColumn":25,"suggestions":"41"},"no-unused-vars","'useRef' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has an unnecessary dependency: 'appId'. Either exclude it or remove the dependency array. Outer scope values like 'appId' aren't valid dependencies because mutating them doesn't re-render the component.","ArrayExpression",["42"],"The 'whitePath' array makes the dependencies of useCallback Hook (at line 940) change on every render. To fix this, wrap the initialization of 'whitePath' in its own useMemo() Hook.","VariableDeclarator","The 'whitePath' array makes the dependencies of useCallback Hook (at line 1139) change on every render. To fix this, wrap the initialization of 'whitePath' in its own useMemo() Hook.","The 'blackPath' array makes the dependencies of useCallback Hook (at line 940) change on every render. To fix this, wrap the initialization of 'blackPath' in its own useMemo() Hook.","The 'blackPath' array makes the dependencies of useCallback Hook (at line 1139) change on every render. To fix this, wrap the initialization of 'blackPath' in its own useMemo() Hook.","'uniqueDiceConsidered' is assigned a value but never used.","React Hook useCallback has an unnecessary dependency: 'endMatch'. Either exclude it or remove the dependency array.",["43"],"React Hook useCallback has unnecessary dependencies: 'getOpponentColor' and 'isPointBlocked'. Either exclude them or remove the dependency array.",["44"],"React Hook useEffect has an unnecessary dependency: 'db'. Either exclude it or remove the dependency array. Outer scope values like 'db' aren't valid dependencies because mutating them doesn't re-render the component.",["45"],{"desc":"46","fix":"47"},{"desc":"48","fix":"49"},{"desc":"50","fix":"51"},{"desc":"52","fix":"53"},"Update the dependencies array to be: []",{"range":"54","text":"55"},"Update the dependencies array to be: [isPlaying, boardState.home.white, boardState.home.black, initializeBoard, currentPlayer, getOpponentColor]",{"range":"56","text":"57"},"Update the dependencies array to be: [moveHistory, boardState, availableDice, currentPlayer, setAvailableDice, setSelectedPoint, setPossibleMovesInfo, setGameMessage, setMustReenterFromBar, calculatePossibleMoves]",{"range":"58","text":"59"},"Update the dependencies array to be: [loadingAuth]",{"range":"60","text":"61"},[5690,5697],"[]",[61680,61797],"[isPlaying, boardState.home.white, boardState.home.black, initializeBoard, currentPlayer, getOpponentColor]",[74597,74807],"[moveHistory, boardState, availableDice, currentPlayer, setAvailableDice, setSelectedPoint, setPossibleMovesInfo, setGameMessage, setMustReenterFromBar, calculatePossibleMoves]",[97974,97991],"[loadingAuth]"]